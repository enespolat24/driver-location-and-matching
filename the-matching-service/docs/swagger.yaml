basePath: /api/v1
definitions:
  domain.ErrorResponse:
    properties:
      details: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  domain.Location:
    description: GeoJSON Point location with longitude and latitude coordinates
    properties:
      coordinates:
        example:
        - 28.9784
        - 41.0082
        items:
          type: number
        type: array
      type:
        example: Point
        type: string
    required:
    - coordinates
    - type
    type: object
  domain.MatchRequest:
    description: Request to find a nearby driver for a rider
    properties:
      location:
        $ref: '#/definitions/domain.Location'
      radius:
        example: 500
        type: number
    required:
    - location
    - radius
    type: object
  domain.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
  description: A service for matching riders with nearby drivers
  title: Matching Service API
  version: "1.0"
paths:
  /api/v1/match:
    post:
      consumes:
      - application/json
      description: Find the nearest driver for a rider based on location and radius
      parameters:
      - description: Match request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.MatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Success: data contains MatchResponse'
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request - Validation error or invalid request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found - No drivers found nearby
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Match rider with nearby driver
      tags:
      - matching
  /health:
    get:
      consumes:
      - application/json
      description: Check if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check endpoint
      tags:
      - health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
